services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: library_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: library_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - library_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flask Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: library_backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: library_db
      DB_USER: postgres
      DB_PASSWORD: postgres123
      FLASK_APP: app.py
      FLASK_ENV: development
    depends_on:
      db:
        condition: service_healthy
    networks:
      - library_network
    volumes:
      - ./backend:/app

networks:
  library_network:
    driver: bridge

volumes:
  postgres_data:
